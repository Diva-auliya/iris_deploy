# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y_dQw9lBovdE14vZxXWFzTGWio-g_jsN
"""

import streamlit as st
import pandas as pd
import numpy as np
import pickle
from sklearn.datasets import load_iris
import matplotlib.pyplot as plt
import seaborn as sns

st.set_pages_config(page_title="Halaman2")
st.title("Tes")
st.sidebar.header("Halaman2")

# Load model
with open("random_forest_model.pkl", "rb") as file:
    model = pickle.load(file)

# Load dataset
iris = load_iris()
df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
df['target'] = iris.target
df['species'] = df['target'].apply(lambda x: iris.target_names[x])

# Sidebar for page selection
page = st.sidebar.selectbox("Select Page", ["Data Description", "Predict Iris", "Visualization"])

# Page 1: Data Description
if page == "Data Description":
    st.title("üå∏ Iris Dataset Overview")
    st.write("The Iris dataset contains 150 samples of iris flowers with 4 features each:")
    st.write("- Sepal Length")
    st.write("- Sepal Width")
    st.write("- Petal Length")
    st.write("- Petal Width")

    st.dataframe(df.head())

    st.subheader("Class Distribution")
    st.bar_chart(df['species'].value_counts())

    st.subheader("Statistical Summary")
    st.write(df.describe())

# Page 2: Prediction
elif page == "Predict Iris":
    st.title("üîç Predict Iris Species")

    sepal_length = st.slider("Sepal Length (cm)", 4.0, 8.0, 5.1)
    sepal_width = st.slider("Sepal Width (cm)", 2.0, 4.5, 3.5)
    petal_length = st.slider("Petal Length (cm)", 1.0, 7.0, 1.4)
    petal_width = st.slider("Petal Width (cm)", 0.1, 2.5, 0.2)

    input_data = np.array([[sepal_length, sepal_width, petal_length, petal_width]])

    if st.button("Predict"):
        prediction = model.predict(input_data)
        predicted_species = iris.target_names[prediction[0]]
        st.success(f"The predicted species is: **{predicted_species}** üåº")

# Page 3: Visualization
else:
    st.title("üìä Data Visualization")

    st.write("Scatter plot to visualize Sepal and Petal dimensions by Species:")
    fig, ax = plt.subplots()
    sns.scatterplot(data=df, x='sepal length (cm)', y='petal length (cm)', hue='species', palette="Set2", s=80)
    plt.xlabel("Sepal Length (cm)")
    plt.ylabel("Petal Length (cm)")
    plt.title("Sepal vs Petal Length")
    st.pyplot(fig)
